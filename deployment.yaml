apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: cloud-config-server
  name: cloud-config-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-config-server
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cloud-config-server
    spec:
      containers:
      - image: skobbekaduawa/microdev:cloud-config-server
        name: cloud-config-server
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: cloud-config-server
  name: cloud-config-server
spec:
  ports:
  - name: 8888-8888
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: cloud-config-server
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: api-gateway
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api-gateway
    spec:
      containers:
        - image: skobbekaduawa/microdev:api-gateway
          name: api-gateway
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: api-gateway
  name: api-gateway
spec:
  ports:
    - name: 9099-9099
      port: 9099
      protocol: TCP
      targetPort: 9099
  selector:
    app: api-gateway
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: auditor
  name: auditor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auditor
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auditor
    spec:
      containers:
        - image: skobbekaduawa/microdev:auditor
          name: auditor
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: auditor
  name: auditor
spec:
  ports:
    - name: 9099-9099
      port: 9099
      protocol: TCP
      targetPort: 9099
  selector:
    app: auditor
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: auditor
  name: auditor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auditor
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auditor
    spec:
      containers:
        - image: skobbekaduawa/microdev:auditor
          name: auditor
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: auditor
  name: auditor
spec:
  ports:
    - name: 9097-9097
      port: 9097
      protocol: TCP
      targetPort: 9097
  selector:
    app: auditor
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: auth-service
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auth-service
    spec:
      containers:
        - image: skobbekaduawa/microdev:auth-service
          name: auth-service
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: auth-service
  name: auth-service
spec:
  ports:
    - name: 9095-9095
      port: 9095
      protocol: TCP
      targetPort: 9095
  selector:
    app: auth-service
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: customer-core
  name: customer-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-core
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: customer-core
    spec:
      containers:
        - image: skobbekaduawa/microdev:customer-core
          name: customer-core
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: customer-core
  name: customer-core
spec:
  ports:
    - name: 8083-8083
      port: 8083
      protocol: TCP
      targetPort: 8083
  selector:
    app: customer-core
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: customer-service
  name: customer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-service
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: customer-service
    spec:
      containers:
        - image: skobbekaduawa/microdev:customer-service
          name: customer-service
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: customer-service
  name: customer-service
spec:
  ports:
    - name: 8082-8082
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app: customer-service
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: customer-service
  name: customer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-service
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: customer-service
    spec:
      containers:
        - image: skobbekaduawa/microdev:customer-service
          name: customer-service
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: customer-service
  name: customer-service
spec:
  ports:
    - name: 8082-8082
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app: customer-service
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zookeeper
    spec:
      containers:
        - image: confluentinc/cp-zookeeper:latest
          name: zookeeper
          resources: {}
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: '2181'
            - name: ZOOKEEPER_TICK_TIME
              value: '2000'
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: zookeeper
  name: zookeeper
spec:
  ports:
    - name: 2181-2181
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    app: zookeeper
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka
    spec:
      containers:
        - image: wurstmeister/kafka:latest
          name: kafka
          ports:
            - containerPort: 9092
          resources: {}
          env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: 'kafka'
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper:2181'
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://kafka:9092'
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: 'true'
            - name: KAFKA_LISTENERS
              value: 'PLAINTEXT://kafka:9092'

status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: kafka-service
  name: kafka-service
spec:
  ports:
    - name: 29092-29092
      port: 29092
      protocol: TCP
      targetPort: 29092
  selector:
    app: kafka
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
    spec:
      containers:
        - image: redis:latest
          name: redis
          resources: {}
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: 'yes'
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: redis
  name: redis
spec:
  ports:
    - name: 6379-6379
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: keycloak
    spec:
      containers:
        - image: local_keycloak
          name: keycloak
          resources: {}
          env:
            - name: DB_VENDOR
              value: h1
            - name: KEYCLOAK_USER
              value: admin
            - name: KEYCLOAK_PASSWORD
              value: admin
            - name: KEYCLOAK_IMPORT
              value: /tmp/realm-export.json
          volumeMounts:
            - name: json-import
              mountPath: /tmp
      volumes:
        - name: json-import
          configMap:
            name: keycloak
            items:
              - key: realm-export.json
                path: realm-export.json
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: keycloak
  name: keycloak
spec:
  ports:
    - name: 28080-8080
      port: 8080
      protocol: TCP
      targetPort: 28080
  selector:
    app: keycloak
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
        - image: postgres:latest
          name: postgres
          resources: {}
          env:
            - name: POSTGRES_DB
              value: 'postgres_database'
            - name: POSTGRES_USER
              value: 'postgres'
            - name: POSTGRES_PASSWORD
              value: 'postgres'
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres
  name: postgres
spec:
  ports:
    - name: 5432-5432
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP
status:
  loadBalancer: {}